buildscript {

  ext.versions = [
    'kotlin': '1.9.24',
    'junit': '5.11.4',
    'moshi': '1.15.2',
    'okhttp': '5.0.0-alpha.14',
    'retrofit': '2.11.0',
    'coroutine':'1.8.0',
    'simplexml':'2.7.1',
    'mockito':'5.12.0',
    'rxjava2':'2.2.21',
    'rxjava3':'3.1.10',
    'truth':'1.1.5',
  ]

  ext.deps = [
    'okhttp': "com.squareup.okhttp3:okhttp:${versions.okhttp}",
    'coroutine': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutine}",
    'mockWebServer': "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
    'junit': [
      'api': "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
      'engine': "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    ],
    'simpleXml': "com.carrotsearch.thirdparty:simple-xml-safe:${versions.simplexml}",
    'mockito': "org.mockito:mockito-core:${versions.mockito}",
    'rxjava2': "io.reactivex.rxjava2:rxjava:${versions.rxjava2}",
    'rxjava3': "io.reactivex.rxjava3:rxjava:${versions.rxjava3}",
    'truth': "com.google.truth:truth:${versions.truth}"
  ]

  repositories {
    mavenCentral()
  }

  dependencies {
    //noinspection DifferentKotlinGradleVersion
      classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
  }
}

allprojects {
  if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc).tap {
      configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }
}

subprojects {
  repositories {
    mavenCentral()
  }

  tasks.withType(Javadoc).configureEach { enabled = false } // FIXME: build fails without this.

  group = GROUP
  version = VERSION_NAME
}
